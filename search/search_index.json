{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u670d\u52a1\u6a21\u7248\u8bf4\u660e\u6587\u6863 \u670d\u52a1\u8bf4\u660e \u672c\u6587\u4ecb\u7ecd\u57fa\u4e8e\u901a\u4e49\u5355\u673agpu\u5b9e\u4f8becs\u670d\u52a1\u5feb\u901f\u4e0a\u624b\u6d41\u7a0b\uff0c\u672c\u793a\u4f8b\u5bf9\u5e94\u7684 git\u5730\u5740 \u672c\u793a\u4f8b\u4f1a\u81ea\u52a8\u7684\u6784\u5efa\u8ba1\u7b97\u5de2\u670d\u52a1\uff0c\u5177\u4f53\u7684\u670d\u52a1\u6784\u5efa\u6d41\u7a0b\u4e3a 1. OOS ACS-ECS-UpdateImage\u6a21\u7248\u6267\u884c\u547d\u4ee4\u6784\u5efaecs\u955c\u50cf 2. \u901a\u8fc7\u6784\u5efa\u597d\u7684ecs\u955c\u50cf\u521b\u5efaECS\u955c\u50cf\u90e8\u7f72\u7269\u5e76\u5b8c\u6210\u5206\u53d1 3. \u521b\u5efa\u8ba1\u7b97\u5de2\u670d\u52a1\u5e76\u5173\u8054\u955c\u50cf\u90e8\u7f72\u7269 \u521b\u5efa\u8fc7\u7a0b\u5927\u7ea6\u6301\u7eed50\u5206\u949f\uff0c\u5f53\u670d\u52a1\u53d8\u6210\u5f85\u63d0\u4ea4\u540e\u6784\u5efa\u6210\u529f \u90e8\u7f72\u67b6\u6784 \u672c\u90e8\u7f72\u67b6\u6784\u4e3a\u5355\u673aecs\u90e8\u7f72\uff0c\u901a\u8fc7\u516c\u7f51ip 8080\u7aef\u53e3\u8bbf\u95ee \u670d\u52a1\u6784\u5efa\u8ba1\u8d39\u8bf4\u660e \u6d4b\u8bd5\u672c\u670d\u52a1\u6784\u5efa\u9700\u8981\u652f\u4ed8\u6784\u5efa\u955c\u50cf\u8fc7\u7a0b\u4e2d\u7684ECS\u8d39\u7528\uff0c\u8bf7\u786e\u4fdd\u8d26\u53f7\u4e2d\u6709\u8db3\u591f\u7684\u4f59\u989d\uff0c\u521b\u5efa\u670d\u52a1\u5b9e\u4f8b\u6d89\u53ca\u7684\u8d39\u7528\u53c2\u8003\u670d\u52a1\u5b9e\u4f8b\u8ba1\u8d39\u8bf4\u660e RAM\u8d26\u53f7\u6240\u9700\u6743\u9650 \u672c\u670d\u52a1\u9700\u8981\u5bf9ECS\u3001VPC\u7b49\u8d44\u6e90\u8fdb\u884c\u8bbf\u95ee\u548c\u521b\u5efa\u64cd\u4f5c\uff0c\u82e5\u60a8\u4f7f\u7528RAM\u7528\u6237\u521b\u5efa\u670d\u52a1\u5b9e\u4f8b\uff0c\u9700\u8981\u5728\u521b\u5efa\u670d\u52a1\u5b9e\u4f8b\u524d\uff0c\u5bf9\u4f7f\u7528\u7684RAM\u7528\u6237\u7684\u8d26\u53f7\u6dfb\u52a0\u76f8\u5e94\u8d44\u6e90\u7684\u6743\u9650\u3002\u6dfb\u52a0RAM\u6743\u9650\u7684\u8be6\u7ec6\u64cd\u4f5c\uff0c\u8bf7\u53c2\u89c1 \u4e3aRAM\u7528\u6237\u6388\u6743 \u3002\u6240\u9700\u6743\u9650\u5982\u4e0b\u8868\u6240\u793a\u3002 \u6743\u9650\u7b56\u7565\u540d\u79f0 \u5907\u6ce8 AliyunECSFullAccess \u7ba1\u7406\u4e91\u670d\u52a1\u5668\u670d\u52a1\uff08ECS\uff09\u7684\u6743\u9650 AliyunVPCFullAccess \u7ba1\u7406\u4e13\u6709\u7f51\u7edc\uff08VPC\uff09\u7684\u6743\u9650 AliyunROSFullAccess \u7ba1\u7406\u8d44\u6e90\u7f16\u6392\u670d\u52a1\uff08ROS\uff09\u7684\u6743\u9650 AliyunComputeNestUserFullAccess \u7ba1\u7406\u8ba1\u7b97\u5de2\u670d\u52a1\uff08ComputeNest\uff09\u7684\u7528\u6237\u4fa7\u6743\u9650 AliyunComputeNestSupplierFullAccess \u7ba1\u7406\u8ba1\u7b97\u5de2\u670d\u52a1\uff08ComputeNest\uff09\u7684\u670d\u52a1\u5546\u4fa7\u6743\u9650 \uff5c \u670d\u52a1\u5b9e\u4f8b\u8ba1\u8d39\u8bf4\u660e \u6d4b\u8bd5\u672c\u670d\u52a1\u5728\u8ba1\u7b97\u5de2\u4e0a\u7684\u8d39\u7528\u4e3b\u8981\u6d89\u53ca\uff1a \u6240\u9009vCPU\u4e0e\u5185\u5b58\u89c4\u683c \u7cfb\u7edf\u76d8\u7c7b\u578b\u53ca\u5bb9\u91cf \u516c\u7f51\u5e26\u5bbd \u8ba1\u8d39\u65b9\u5f0f\u5305\u62ec\uff1a \u6309\u91cf\u4ed8\u8d39\uff08\u5c0f\u65f6\uff09 \u5305\u5e74\u5305\u6708 \u9884\u4f30\u8d39\u7528\u5728\u521b\u5efa\u5b9e\u4f8b\u65f6\u53ef\u5b9e\u65f6\u770b\u5230\u3002 \u90e8\u7f72\u6d41\u7a0b \u90e8\u7f72\u53c2\u6570\u8bf4\u660e | \u53c2\u6570\u7ec4 | \u53c2\u6570\u9879 | \u793a\u4f8b | \u8bf4\u660e | | --- | --- | --- | --- | | \u670d\u52a1\u5b9e\u4f8b\u540d\u79f0 | | test | \u5b9e\u4f8b\u7684\u540d\u79f0 | | \u5730\u57df | \u90e8\u7f72\u5730\u57df | \u65b0\u52a0\u5761 | \u9009\u4e2d\u670d\u52a1\u5b9e\u4f8b\u7684\u5730\u57df\uff0c\u56e0\u4e3a\u4e00\u4e9b\u6a21\u578b\u5728\u56fd\u5185\u65e0\u6cd5\u4e0b\u8f7d\u8bbf\u95ee\uff0c\u5efa\u8bae\u9009\u62e9\u4e2d\u56fd\u9999\u6e2f\u6216\u6d77\u5916\u5730\u57df | | \u53ef\u7528\u533a\u914d\u7f6e | \u90e8\u7f72\u533a\u57df | \u53ef\u7528\u533aI | \u5730\u57df\u4e0b\u7684\u4e0d\u540c\u53ef\u7528\u533a\u57df | | \u4ed8\u8d39\u7c7b\u578b\u914d\u7f6e | \u4ed8\u8d39\u7c7b\u578b | \u6309\u91cf\u4ed8\u8d39 \u6216 \u5305\u5e74\u5305\u6708 | | | ECS\u5b9e\u4f8b\u914d\u7f6e | \u5b9e\u4f8b\u7c7b\u578b | ecs.gn6i-c4g1.xlarge | \u5b9e\u4f8b\u89c4\u683c\uff0c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u6c42\u9009\u62e9 | | ECS\u5b9e\u4f8b\u914d\u7f6e | \u5b9e\u4f8b\u5bc6\u7801 | | \u8bbe\u7f6e\u5b9e\u4f8b\u5bc6\u7801\u3002\u957f\u5ea68\uff0c30\u4e2a\u5b57\u7b26\uff0c\u5fc5\u987b\u5305\u542b\u4e09\u9879\uff08\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u3001()`!@#$%^&*-+={}[]:;'<>,.?/ \u4e2d\u7684\u7279\u6b8a\u7b26\u53f7\uff09 | | \u767b\u5f55\u4fe1\u606f | \u8f6f\u4ef6\u767b\u5f55\u540d | admin | \u8bbe\u7f6e\u8f6f\u4ef6\u767b\u5f55\u540d\uff0c\u9ed8\u8ba4\u4e3aadmin | | \u767b\u5f55\u4fe1\u606f | \u8f6f\u4ef6\u767b\u5f55\u540d\u5bc6\u7801 | | \u8bbe\u7f6e\u8f6f\u4ef6\u767b\u5f55\u5bc6\u7801 | | \u7f51\u7edc\u914d\u7f6e | \u4e13\u6709\u7f51\u7edcIPv4\u7f51\u6bb5 | 192.168.0.0/16 | VPC\u7684ip\u5730\u5740\u6bb5\u8303\u56f4 | | \u7f51\u7edc\u914d\u7f6e | \u4ea4\u6362\u673a\u5b50\u7f51\u7f51\u6bb5 | 192.168.0.0/24 | \u4ea4\u6362\u673a\u5b50\u7f51\u7f51\u6bb5 | | \u90e8\u7f72\u6b65\u9aa4 \u767b\u5f55\u963f\u91cc\u4e91\u8ba1\u7b97\u5de2\u63a7\u5236\u53f0\u627e\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u70b9\u90e8\u7f72\u94fe\u63a5\u8fdb\u5165\u90e8\u7f72 \u52fe\u9009\u6211\u5df2\u9605\u8bfb\u5e76\u540c\u610f\u300a\u8ba1\u7b97\u5de2\u670d\u52a1\u534f\u8bae\u300b\uff0c\u70b9\u51fb\"\u7acb\u5373\u521b\u5efa\"\u6309\u94ae\u3002 \u67e5\u770b\u90e8\u7f72\u8fdb\u5ea6\u3002 \u70b9\u51fb\u53bb\u5217\u8868\u9875\u67e5\u770b\uff0c\u53ef\u4ee5\u770b\u5230\u521a\u521a\u521b\u5efa\u7684\u670d\u52a1\u5b9e\u4f8b\u4ee5\u53ca\u670d\u52a1\u90e8\u7f72\u8fdb\u5ea6\u3002 \u8bbf\u95ee\u7b49\u5f85\u72b6\u6001\u53d8\u4e3a\"\u5df2\u90e8\u7f72\"\u540e\uff0c\u70b9\u51fb\u8be6\u60c5\uff0c\u8fdb\u5165\u5bf9\u5e94\u7684\u670d\u52a1\u5b9e\u4f8b\u540e\uff0c\u53ef\u4ee5\u5728\u9875\u9762\u4e0a\u83b7\u53d6Endpoint\u4ee5\u8bbf\u95ee\u670d\u52a1\u3002 \u70b9\u51fbEndpoint\u540e\u9762\u7684\u94fe\u63a5\uff0c\u8f93\u5165\u7b2c1\u6b65\u8bbe\u7f6e\u7684\u8f6f\u4ef6\u767b\u5f55\u540d\u53ca\u5bc6\u7801\u3002 \u5b8c\u6210\u9a8c\u8bc1\u540e\u5373\u53ef\u8bbf\u95ee\uff1a \u670d\u52a1\u8be6\u7ec6\u8bf4\u660e \u57fa\u4e8eecs\u955c\u50cf\u7684\u90e8\u7f72\u6d41\u7a0b\u8be6\u7ec6\u53c2\u89c1springboot ecs\u5355\u673a\u7248\u6784\u5efa\uff0c\u672c\u6587\u53ea\u4ecb\u7ecdgpu\u548c\u8f6f\u4ef6\u6784\u5efa\u7684\u5177\u4f53\u6b65\u9aa4 ecs\u6784\u5efa\u57fa\u4e8egpu\u955c\u50cf\u6267\u884c\u547d\u4ee4 \u5b89\u88c5\u57fa\u7840\u73af\u5883\u548cgit\u4e0b\u8f7d\u8f6f\u4ef6\uff0c\u914d\u7f6e\u5728config.yaml\u4e2d # openssl wget https://www.openssl.org/source/openssl-1.1.1n.tar.gz --no-check-certificate tar -zxvf openssl-1.1.1n.tar.gz cd openssl-1.1.1n ./config --prefix=/usr/local/openssl make -j && make install openssl version ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl sudo ldconfig export LD_LIBRARY_PATH=/usr/local/openssl/lib:$LD_LIBRARY_PATH cd .. && rm -rf openssl-1.1.1n.tar.gz # \u5b89\u88c5python3.8.6 cd /usr/local/ wget https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tgz --no-check-certificate tar -zxvf Python-3.8.6.tgz && rm -f Python-3.8.6.tgz cd /usr/local/Python-3.8.6/ ./configure --prefix=/usr/local/python3 --with-openssl=/usr/local/openssl --with-openssl-rpath=auto yum install -y libffi-devel zlib zlib-devel bzip2-devel yum install -y xz-devel yum install -y python-backports-lzma yum install -y lzma yum install -y libX11 yum install -y libXext make && make install echo 'export PATH=\"/usr/local/python3/bin:$PATH\"' >> /root/.bashrc source /root/.bashrc # \u5b89\u88c5git yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm yum install -y git # \u5b89\u88c5tongyi cd /root git clone https://www.modelscope.cn/studios/qwen/Qwen-14B-Chat-Demo.git # \u4f9d\u8d56\u73af\u5883 pip3 install gradio pip3 install torch pip3 install modelscope pip3 install transformers pip3 install tiktoken pip3 install transformers_stream_generator pip3 install accelerate # \u542f\u52a8\u9884\u4e0b\u8f7d\u6a21\u578b mkdir -p /root/.cache/modelscope/hub/qwen wget https://computenest-data-ap-southeast-1.oss-ap-southeast-1-internal.aliyuncs.com/qwen/Qwen-14B-Chat.tar tar xvf Qwen-14B-Chat.tar && mv Qwen-14B-Chat /root/.cache/modelscope/hub/qwen/ cd Qwen-14B-Chat-Demo python3 app.py > /var/log/app.log & for ((i=0;i<1000;i++)) do curl 127.0.0.1:7860 > /tmp/health_check if [ \"$?\" == 0 ] then break fi sleep 10 done \u5728template.yaml\u914d\u7f6e\u8f6f\u4ef6\u542f\u52a8\u65f6\u6839\u636eUserName\u548cPassword\u914d\u7f6esystemctl\u5e76\u7ed9nginx\u914d\u7f6e\u8d26\u53f7\u5bc6\u7801\u653e\u5230/etc/nginx/password\u4e2d\uff0c\u6700\u7ec8\u901a\u8fc7systemctl\u62c9\u8d77tongyi\u670d\u52a1 CommandContent: Fn::Sub: # \u5c06master\u7684ip\u8f93\u5165\u5230/root/conf.txt # \u53ef\u4ee5\u5728\u540e\u7eed\u7684\u6b65\u9aa4\u4e2d\u901a\u8fc7conf.txt\u91cc\u7684\u5185\u5bb9\u5b8c\u6210slave\u7684\u521d\u59cb\u5316 - | #!/bin/bash cat > /lib/systemd/system/tongyi.service << \"EOF\" [Unit] Description=TongYi Model App After=network-online.target Wants=network-online.target [Service] ExecStart=/bin/bash -c \"cd /root/Qwen-14B-Chat-Demo && python3 app.py\" Restart=on-abnormal LimitNOFILE=60000 TimeoutSec=120 [Install] WantedBy=multi-user.target EOF cat > /etc/nginx/conf.d/5000.conf <<\"EOF\" server { listen 5000; server_name _; root /usr/share/nginx/html; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; auth_basic \"\u8bf7\u8f93\u5165\u7528\u6237\u548c\u5bc6\u7801\"; # \u9a8c\u8bc1\u65f6\u7684\u63d0\u793a\u4fe1\u606f auth_basic_user_file /etc/nginx/password; # \u8ba4\u8bc1\u6587\u4ef6 location / { proxy_pass http://127.0.0.1:7860/; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection Upgrade; } error_page 404 /404.html; location = /404.html { } error_page 500 502 503 504 /50x.html; location = /50x.html { } } EOF systemctl daemon-reload systemctl enable tongyi systemctl start tongyi systemctl status tongyi for ((i=0;i<1000;i++)) do curl 127.0.0.1:7860 if [ \"$?\" == 0 ] then break fi sleep 10 done htpasswd -bc /etc/nginx/password ${UserName} '${Password}' systemctl start nginx systemctl status nginx systemctl enable nginx # \u6267\u884c\u6210\u529f\u56de\u8c03WaitCondition\u7ed3\u675fwaitCondition\u7684\u7b49\u5f85 ${CurlCli} -d \"{\\\"Data\\\" : \\\"Success\\\", \\\"status\\\" : \\\"SUCCESS\\\"}\" - UserName: Ref: UserName Password: Ref: Password # \u83b7\u53d6\u5230waitConditionHandle\u7684\u5730\u5740\u653e\u5230 ${CurlCli}\u53d8\u91cf\u91cc CurlCli: Fn::GetAtt: - WaitConditionHandle - CurlCli \u5176\u4ed6\u8bf4\u660e \u5b9e\u4f8b\u4ee3\u7801\u6e90\u5730\u5740","title":"\u670d\u52a1\u6a21\u7248\u8bf4\u660e\u6587\u6863"},{"location":"#_1","text":"","title":"\u670d\u52a1\u6a21\u7248\u8bf4\u660e\u6587\u6863"},{"location":"#_2","text":"\u672c\u6587\u4ecb\u7ecd\u57fa\u4e8e\u901a\u4e49\u5355\u673agpu\u5b9e\u4f8becs\u670d\u52a1\u5feb\u901f\u4e0a\u624b\u6d41\u7a0b\uff0c\u672c\u793a\u4f8b\u5bf9\u5e94\u7684 git\u5730\u5740 \u672c\u793a\u4f8b\u4f1a\u81ea\u52a8\u7684\u6784\u5efa\u8ba1\u7b97\u5de2\u670d\u52a1\uff0c\u5177\u4f53\u7684\u670d\u52a1\u6784\u5efa\u6d41\u7a0b\u4e3a 1. OOS ACS-ECS-UpdateImage\u6a21\u7248\u6267\u884c\u547d\u4ee4\u6784\u5efaecs\u955c\u50cf 2. \u901a\u8fc7\u6784\u5efa\u597d\u7684ecs\u955c\u50cf\u521b\u5efaECS\u955c\u50cf\u90e8\u7f72\u7269\u5e76\u5b8c\u6210\u5206\u53d1 3. \u521b\u5efa\u8ba1\u7b97\u5de2\u670d\u52a1\u5e76\u5173\u8054\u955c\u50cf\u90e8\u7f72\u7269 \u521b\u5efa\u8fc7\u7a0b\u5927\u7ea6\u6301\u7eed50\u5206\u949f\uff0c\u5f53\u670d\u52a1\u53d8\u6210\u5f85\u63d0\u4ea4\u540e\u6784\u5efa\u6210\u529f","title":"\u670d\u52a1\u8bf4\u660e"},{"location":"#_3","text":"\u672c\u90e8\u7f72\u67b6\u6784\u4e3a\u5355\u673aecs\u90e8\u7f72\uff0c\u901a\u8fc7\u516c\u7f51ip 8080\u7aef\u53e3\u8bbf\u95ee","title":"\u90e8\u7f72\u67b6\u6784"},{"location":"#_4","text":"\u6d4b\u8bd5\u672c\u670d\u52a1\u6784\u5efa\u9700\u8981\u652f\u4ed8\u6784\u5efa\u955c\u50cf\u8fc7\u7a0b\u4e2d\u7684ECS\u8d39\u7528\uff0c\u8bf7\u786e\u4fdd\u8d26\u53f7\u4e2d\u6709\u8db3\u591f\u7684\u4f59\u989d\uff0c\u521b\u5efa\u670d\u52a1\u5b9e\u4f8b\u6d89\u53ca\u7684\u8d39\u7528\u53c2\u8003\u670d\u52a1\u5b9e\u4f8b\u8ba1\u8d39\u8bf4\u660e","title":"\u670d\u52a1\u6784\u5efa\u8ba1\u8d39\u8bf4\u660e"},{"location":"#ram","text":"\u672c\u670d\u52a1\u9700\u8981\u5bf9ECS\u3001VPC\u7b49\u8d44\u6e90\u8fdb\u884c\u8bbf\u95ee\u548c\u521b\u5efa\u64cd\u4f5c\uff0c\u82e5\u60a8\u4f7f\u7528RAM\u7528\u6237\u521b\u5efa\u670d\u52a1\u5b9e\u4f8b\uff0c\u9700\u8981\u5728\u521b\u5efa\u670d\u52a1\u5b9e\u4f8b\u524d\uff0c\u5bf9\u4f7f\u7528\u7684RAM\u7528\u6237\u7684\u8d26\u53f7\u6dfb\u52a0\u76f8\u5e94\u8d44\u6e90\u7684\u6743\u9650\u3002\u6dfb\u52a0RAM\u6743\u9650\u7684\u8be6\u7ec6\u64cd\u4f5c\uff0c\u8bf7\u53c2\u89c1 \u4e3aRAM\u7528\u6237\u6388\u6743 \u3002\u6240\u9700\u6743\u9650\u5982\u4e0b\u8868\u6240\u793a\u3002 \u6743\u9650\u7b56\u7565\u540d\u79f0 \u5907\u6ce8 AliyunECSFullAccess \u7ba1\u7406\u4e91\u670d\u52a1\u5668\u670d\u52a1\uff08ECS\uff09\u7684\u6743\u9650 AliyunVPCFullAccess \u7ba1\u7406\u4e13\u6709\u7f51\u7edc\uff08VPC\uff09\u7684\u6743\u9650 AliyunROSFullAccess \u7ba1\u7406\u8d44\u6e90\u7f16\u6392\u670d\u52a1\uff08ROS\uff09\u7684\u6743\u9650 AliyunComputeNestUserFullAccess \u7ba1\u7406\u8ba1\u7b97\u5de2\u670d\u52a1\uff08ComputeNest\uff09\u7684\u7528\u6237\u4fa7\u6743\u9650 AliyunComputeNestSupplierFullAccess \u7ba1\u7406\u8ba1\u7b97\u5de2\u670d\u52a1\uff08ComputeNest\uff09\u7684\u670d\u52a1\u5546\u4fa7\u6743\u9650 \uff5c","title":"RAM\u8d26\u53f7\u6240\u9700\u6743\u9650"},{"location":"#_5","text":"\u6d4b\u8bd5\u672c\u670d\u52a1\u5728\u8ba1\u7b97\u5de2\u4e0a\u7684\u8d39\u7528\u4e3b\u8981\u6d89\u53ca\uff1a \u6240\u9009vCPU\u4e0e\u5185\u5b58\u89c4\u683c \u7cfb\u7edf\u76d8\u7c7b\u578b\u53ca\u5bb9\u91cf \u516c\u7f51\u5e26\u5bbd \u8ba1\u8d39\u65b9\u5f0f\u5305\u62ec\uff1a \u6309\u91cf\u4ed8\u8d39\uff08\u5c0f\u65f6\uff09 \u5305\u5e74\u5305\u6708 \u9884\u4f30\u8d39\u7528\u5728\u521b\u5efa\u5b9e\u4f8b\u65f6\u53ef\u5b9e\u65f6\u770b\u5230\u3002","title":"\u670d\u52a1\u5b9e\u4f8b\u8ba1\u8d39\u8bf4\u660e"},{"location":"#_6","text":"","title":"\u90e8\u7f72\u6d41\u7a0b"},{"location":"#_7","text":"| \u53c2\u6570\u7ec4 | \u53c2\u6570\u9879 | \u793a\u4f8b | \u8bf4\u660e | | --- | --- | --- | --- | | \u670d\u52a1\u5b9e\u4f8b\u540d\u79f0 | | test | \u5b9e\u4f8b\u7684\u540d\u79f0 | | \u5730\u57df | \u90e8\u7f72\u5730\u57df | \u65b0\u52a0\u5761 | \u9009\u4e2d\u670d\u52a1\u5b9e\u4f8b\u7684\u5730\u57df\uff0c\u56e0\u4e3a\u4e00\u4e9b\u6a21\u578b\u5728\u56fd\u5185\u65e0\u6cd5\u4e0b\u8f7d\u8bbf\u95ee\uff0c\u5efa\u8bae\u9009\u62e9\u4e2d\u56fd\u9999\u6e2f\u6216\u6d77\u5916\u5730\u57df | | \u53ef\u7528\u533a\u914d\u7f6e | \u90e8\u7f72\u533a\u57df | \u53ef\u7528\u533aI | \u5730\u57df\u4e0b\u7684\u4e0d\u540c\u53ef\u7528\u533a\u57df | | \u4ed8\u8d39\u7c7b\u578b\u914d\u7f6e | \u4ed8\u8d39\u7c7b\u578b | \u6309\u91cf\u4ed8\u8d39 \u6216 \u5305\u5e74\u5305\u6708 | | | ECS\u5b9e\u4f8b\u914d\u7f6e | \u5b9e\u4f8b\u7c7b\u578b | ecs.gn6i-c4g1.xlarge | \u5b9e\u4f8b\u89c4\u683c\uff0c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u6c42\u9009\u62e9 | | ECS\u5b9e\u4f8b\u914d\u7f6e | \u5b9e\u4f8b\u5bc6\u7801 | | \u8bbe\u7f6e\u5b9e\u4f8b\u5bc6\u7801\u3002\u957f\u5ea68\uff0c30\u4e2a\u5b57\u7b26\uff0c\u5fc5\u987b\u5305\u542b\u4e09\u9879\uff08\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u3001()`!@#$%^&*-+={}[]:;'<>,.?/ \u4e2d\u7684\u7279\u6b8a\u7b26\u53f7\uff09 | | \u767b\u5f55\u4fe1\u606f | \u8f6f\u4ef6\u767b\u5f55\u540d | admin | \u8bbe\u7f6e\u8f6f\u4ef6\u767b\u5f55\u540d\uff0c\u9ed8\u8ba4\u4e3aadmin | | \u767b\u5f55\u4fe1\u606f | \u8f6f\u4ef6\u767b\u5f55\u540d\u5bc6\u7801 | | \u8bbe\u7f6e\u8f6f\u4ef6\u767b\u5f55\u5bc6\u7801 | | \u7f51\u7edc\u914d\u7f6e | \u4e13\u6709\u7f51\u7edcIPv4\u7f51\u6bb5 | 192.168.0.0/16 | VPC\u7684ip\u5730\u5740\u6bb5\u8303\u56f4 | | \u7f51\u7edc\u914d\u7f6e | \u4ea4\u6362\u673a\u5b50\u7f51\u7f51\u6bb5 | 192.168.0.0/24 | \u4ea4\u6362\u673a\u5b50\u7f51\u7f51\u6bb5 | |","title":"\u90e8\u7f72\u53c2\u6570\u8bf4\u660e"},{"location":"#_8","text":"\u767b\u5f55\u963f\u91cc\u4e91\u8ba1\u7b97\u5de2\u63a7\u5236\u53f0\u627e\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u70b9\u90e8\u7f72\u94fe\u63a5\u8fdb\u5165\u90e8\u7f72 \u52fe\u9009\u6211\u5df2\u9605\u8bfb\u5e76\u540c\u610f\u300a\u8ba1\u7b97\u5de2\u670d\u52a1\u534f\u8bae\u300b\uff0c\u70b9\u51fb\"\u7acb\u5373\u521b\u5efa\"\u6309\u94ae\u3002 \u67e5\u770b\u90e8\u7f72\u8fdb\u5ea6\u3002 \u70b9\u51fb\u53bb\u5217\u8868\u9875\u67e5\u770b\uff0c\u53ef\u4ee5\u770b\u5230\u521a\u521a\u521b\u5efa\u7684\u670d\u52a1\u5b9e\u4f8b\u4ee5\u53ca\u670d\u52a1\u90e8\u7f72\u8fdb\u5ea6\u3002 \u8bbf\u95ee\u7b49\u5f85\u72b6\u6001\u53d8\u4e3a\"\u5df2\u90e8\u7f72\"\u540e\uff0c\u70b9\u51fb\u8be6\u60c5\uff0c\u8fdb\u5165\u5bf9\u5e94\u7684\u670d\u52a1\u5b9e\u4f8b\u540e\uff0c\u53ef\u4ee5\u5728\u9875\u9762\u4e0a\u83b7\u53d6Endpoint\u4ee5\u8bbf\u95ee\u670d\u52a1\u3002 \u70b9\u51fbEndpoint\u540e\u9762\u7684\u94fe\u63a5\uff0c\u8f93\u5165\u7b2c1\u6b65\u8bbe\u7f6e\u7684\u8f6f\u4ef6\u767b\u5f55\u540d\u53ca\u5bc6\u7801\u3002 \u5b8c\u6210\u9a8c\u8bc1\u540e\u5373\u53ef\u8bbf\u95ee\uff1a","title":"\u90e8\u7f72\u6b65\u9aa4"},{"location":"#_9","text":"\u57fa\u4e8eecs\u955c\u50cf\u7684\u90e8\u7f72\u6d41\u7a0b\u8be6\u7ec6\u53c2\u89c1springboot ecs\u5355\u673a\u7248\u6784\u5efa\uff0c\u672c\u6587\u53ea\u4ecb\u7ecdgpu\u548c\u8f6f\u4ef6\u6784\u5efa\u7684\u5177\u4f53\u6b65\u9aa4 ecs\u6784\u5efa\u57fa\u4e8egpu\u955c\u50cf\u6267\u884c\u547d\u4ee4 \u5b89\u88c5\u57fa\u7840\u73af\u5883\u548cgit\u4e0b\u8f7d\u8f6f\u4ef6\uff0c\u914d\u7f6e\u5728config.yaml\u4e2d # openssl wget https://www.openssl.org/source/openssl-1.1.1n.tar.gz --no-check-certificate tar -zxvf openssl-1.1.1n.tar.gz cd openssl-1.1.1n ./config --prefix=/usr/local/openssl make -j && make install openssl version ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl sudo ldconfig export LD_LIBRARY_PATH=/usr/local/openssl/lib:$LD_LIBRARY_PATH cd .. && rm -rf openssl-1.1.1n.tar.gz # \u5b89\u88c5python3.8.6 cd /usr/local/ wget https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tgz --no-check-certificate tar -zxvf Python-3.8.6.tgz && rm -f Python-3.8.6.tgz cd /usr/local/Python-3.8.6/ ./configure --prefix=/usr/local/python3 --with-openssl=/usr/local/openssl --with-openssl-rpath=auto yum install -y libffi-devel zlib zlib-devel bzip2-devel yum install -y xz-devel yum install -y python-backports-lzma yum install -y lzma yum install -y libX11 yum install -y libXext make && make install echo 'export PATH=\"/usr/local/python3/bin:$PATH\"' >> /root/.bashrc source /root/.bashrc # \u5b89\u88c5git yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm yum install -y git # \u5b89\u88c5tongyi cd /root git clone https://www.modelscope.cn/studios/qwen/Qwen-14B-Chat-Demo.git # \u4f9d\u8d56\u73af\u5883 pip3 install gradio pip3 install torch pip3 install modelscope pip3 install transformers pip3 install tiktoken pip3 install transformers_stream_generator pip3 install accelerate # \u542f\u52a8\u9884\u4e0b\u8f7d\u6a21\u578b mkdir -p /root/.cache/modelscope/hub/qwen wget https://computenest-data-ap-southeast-1.oss-ap-southeast-1-internal.aliyuncs.com/qwen/Qwen-14B-Chat.tar tar xvf Qwen-14B-Chat.tar && mv Qwen-14B-Chat /root/.cache/modelscope/hub/qwen/ cd Qwen-14B-Chat-Demo python3 app.py > /var/log/app.log & for ((i=0;i<1000;i++)) do curl 127.0.0.1:7860 > /tmp/health_check if [ \"$?\" == 0 ] then break fi sleep 10 done \u5728template.yaml\u914d\u7f6e\u8f6f\u4ef6\u542f\u52a8\u65f6\u6839\u636eUserName\u548cPassword\u914d\u7f6esystemctl\u5e76\u7ed9nginx\u914d\u7f6e\u8d26\u53f7\u5bc6\u7801\u653e\u5230/etc/nginx/password\u4e2d\uff0c\u6700\u7ec8\u901a\u8fc7systemctl\u62c9\u8d77tongyi\u670d\u52a1 CommandContent: Fn::Sub: # \u5c06master\u7684ip\u8f93\u5165\u5230/root/conf.txt # \u53ef\u4ee5\u5728\u540e\u7eed\u7684\u6b65\u9aa4\u4e2d\u901a\u8fc7conf.txt\u91cc\u7684\u5185\u5bb9\u5b8c\u6210slave\u7684\u521d\u59cb\u5316 - | #!/bin/bash cat > /lib/systemd/system/tongyi.service << \"EOF\" [Unit] Description=TongYi Model App After=network-online.target Wants=network-online.target [Service] ExecStart=/bin/bash -c \"cd /root/Qwen-14B-Chat-Demo && python3 app.py\" Restart=on-abnormal LimitNOFILE=60000 TimeoutSec=120 [Install] WantedBy=multi-user.target EOF cat > /etc/nginx/conf.d/5000.conf <<\"EOF\" server { listen 5000; server_name _; root /usr/share/nginx/html; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; auth_basic \"\u8bf7\u8f93\u5165\u7528\u6237\u548c\u5bc6\u7801\"; # \u9a8c\u8bc1\u65f6\u7684\u63d0\u793a\u4fe1\u606f auth_basic_user_file /etc/nginx/password; # \u8ba4\u8bc1\u6587\u4ef6 location / { proxy_pass http://127.0.0.1:7860/; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection Upgrade; } error_page 404 /404.html; location = /404.html { } error_page 500 502 503 504 /50x.html; location = /50x.html { } } EOF systemctl daemon-reload systemctl enable tongyi systemctl start tongyi systemctl status tongyi for ((i=0;i<1000;i++)) do curl 127.0.0.1:7860 if [ \"$?\" == 0 ] then break fi sleep 10 done htpasswd -bc /etc/nginx/password ${UserName} '${Password}' systemctl start nginx systemctl status nginx systemctl enable nginx # \u6267\u884c\u6210\u529f\u56de\u8c03WaitCondition\u7ed3\u675fwaitCondition\u7684\u7b49\u5f85 ${CurlCli} -d \"{\\\"Data\\\" : \\\"Success\\\", \\\"status\\\" : \\\"SUCCESS\\\"}\" - UserName: Ref: UserName Password: Ref: Password # \u83b7\u53d6\u5230waitConditionHandle\u7684\u5730\u5740\u653e\u5230 ${CurlCli}\u53d8\u91cf\u91cc CurlCli: Fn::GetAtt: - WaitConditionHandle - CurlCli","title":"\u670d\u52a1\u8be6\u7ec6\u8bf4\u660e"},{"location":"#_10","text":"\u5b9e\u4f8b\u4ee3\u7801\u6e90\u5730\u5740","title":"\u5176\u4ed6\u8bf4\u660e"}]}